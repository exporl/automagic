function log = getLogTextStruct()
% getLogTextStruct  Return a structure containing lines to be printed to
% create the log file at the end of the preprocessing. Each line
% corresponds to a specific step of preprocessing and is printed if that
% specific preprocessing step is used.
%
%   Simply change the text here and the log file will be changed
%   accordingly.
%
%   The text is hardcoded and need to be changed accordingly if anything in
%   the preprocessing steps is changed.
%
% Copyright (C) 2018  Amirreza Bahreini, methlabuzh@gmail.com
% 
% This program is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
% 
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program.  If not, see <http://www.gnu.org/licenses/>.

log = struct('info', struct('automagic', 'Automagic version %s\n',...
                            'matlab', 'MATLAB version %s, Release %s %s\n', ...
                            'fileName', 'File %s of subject %s belongs to study %s\n', ...
                            'time', 'Last time preprocessed: %s\n'), ...
            'error', struct('desc', '>>>>>>>>>>>>>>> An unusual ERROR on this file has occurred: %s\n'), ...
            'prep', struct('desc', '* PREP pipeline (Bigdely-Shamlo N, Mullen T, Kothe C, Su K-M and Robbins KA (2015))\n', ...
                           'detrend', '\t* Temporary (not affecting final EEG) detrend data at %.2f Hz cutoff \n\t (%.2f s window slide) using using %s detrending to improve \n\t performance of down-stream processing. In the case of high pass \n\t filtering the pop_eegfiltnew FIR filter is used.\n',...
                           'lineNoise', '\t* Line noise removal, using routines from the cleanline EEGLAB plugin \n\t with a frequency range of [%.2f %.2f] Hz, where %sHz \n\t (+- %d Hz bandwith) are tried to be removed in maximally %d iterations. \n\t (Mullen, T. (2012). NITRC: CleanLine: Tool/Resource Info. Available \n\t  online at: http://www.nitrc.org/projects/cleanline)\n',...
                           'reference', struct('robDevThres', '\t* Detecting noisy or outlier channels based on extreme amplitudes \n\t of a Z-score cutoff for robust channel deviation of more than %.2f.\n', ...
                                                'corr', '\t* Detecting noisy or outlier channels based on lack of correlation \n\t with any other channel with a window size of %d s to compute \n\t correlations and a threshold of %.2f (the lowest maximum correlation \n\t with another channel).\n',...
                                                'ransac', '\t* Detecting noisy or outlier channels based on lack of predictability \n\t by other channels using a RANSAC sample size of %d in a fraction of \n\t %.2f evaluation channels to predict a channel. Channels are bad if \n\t the RANSAC prediction in a fraction of %.2f windows of %.2fs duration \n\t falls below the absolute correlation of %.2f.\n',...
                                                'highFreqNoise', '\t* Detecting noisy or outlier channels based on unusual high frequency \n\t noise using a Z-score cutoff for SNR (signal above 50* Hz) of %.2f.\n', ...
                                                'maxIter', '\t* Robust referencing using maximally %.2f.\n'...
                                                )...
                        ),...
             'clean_rawdata', struct('desc', '* clean_rawdata() 0.34 (by Christian Kothe http://sccn.ucsd.edu/wiki/Plugin_list_process)\n', ...
                                     'noASRFilter', '\t* Temporary (not affecting final data) detrend data with a high pass filter \n\t (forward-backward (non-causal) filter) with a transition band of \n\t [%.2f %.2f] (stop-band attenuation of 80*dB)\n', ...
                                     'ASRFilter', '\t* Detrend data (affecting final data) with a high pass filter \n\t (forward-backward (non-causal)  filter) with a transition band of \n\t [%.2f %.2f] (stop-band attenuation of 80*dB)\n', ...
                                     'flatLine', '\t* Detecting (near-) flat-lined channels with a maximally tolerated \n\t duration of %.2f s and a maximum tolerated jitter during flatlines \n\t of 20x epsilon (i.e. floating-point relative accuracy).\n', ...
                                     'lineNoise', '\t* Detecting noisy or outlier channels based on exceeding noise level \n\t of more than %.2f standard deviations compared to the total channel \n\t population\n', ...
                                     'ransac', '\t* Detecting noisy or outlier channels based on lack of predictability \n\t by other channels using a RANSAC sample size of 50 in a fraction of \n\t 0.25 evaluation channels to predict a channel. Channels are bad if \n\t the RANSAC prediction in a fraction of %.2f windows of 5* s duration falls \n\t below the absolute correlation of %.2f.\n', ...
                                     'burst','\t* Reconstructing epochs of the EEG that are contaminated abnormally \n\t strong power (more than %.2f SD relative to calibration data) using \n\t Artifact Subspace Reconstruction (REFERENCE). The subspaces on which \n\t those events occur are reconstructed (interpolated) based on the rest \n\t of the EEG signal during these time periods.\n',...
                                     'window','\t* Time windows are removed that were not repaired completely if the \n\t maximum number of channels is greater than %.2f.\n'...
                        ),...
             'filtering', struct('filtnew_desc', '* pop_eegfiltnew() of EEGLAB (Widmann A, Schr√∂ger E. Filter effects and filter \n\t artifacts in the analysis of electrophysiological data. Frontiers in \n\t psychology. 2012 Jul;3:233)\n', ...
                                'firws_desc', '* pop_firws() of EEGLAB (Widmann A. Firfilt EEGLAB plugin. \n\t Leipzig, Germany: University of Leipzig; 2006.\n', ...
                                 'high', '\t* Performed a high pass filter using pop_eegfiltnew() FIR filter with \n\t passband edge(s): %.2fHz, filter order: %.2f, cutoff_freq: %.2f, \n\t transition band width: %.2fHz.\n', ...
                                 'low', '\t* Performed a low pass filter using pop_eegfiltnew() FIR filter with \n\t passband edge(s): %.2fHz, filter order: %.2f, cutoff_freq: %.2f, \n\t transition band width: %.2fHz.\n', ...
                                 'notch', '\t* Performed a notch filter using pop_eegfiltnew() FIR filter with \n\t passband edge(s): %.2fHz, filter order: %.2f, transition band width: %.2fHz.\n', ...
                                 'ZapLine', '\t* Performed a ZapLine filter using nt_zapline() filter with \n\t passband edge(s): %.2fHz\n', ...
                                 'ZapLinePlus', '\t* Performed a ZapLinePlus filter using clean_data_with_zapline_plus() filter with \n\t passband edge(s): %.2fHz\n', ...
                                 'firwshigh', '\t* Performed a high pass filter using pop_firws() windowed sinc FIR filter with \n\t cutoff frequency: %sHz, filter order: %s\n', ...
                                 'firwslow', '\t* Performed a low pass filter using pop_firws() windowed sinc FIR filter with \n\t cutoff frequency: %sHz, filter order: %s\n' ...
                                 ),...
              'badchans', struct('desc', '* Removing a total of %d noisy or outlier channels\n', ...
                                 'prep', '\t* Number of channels removed due to PREP: %d\n', ...
                                 'crd', '\t* Number of channels removed due to clean_rawdata(): %d (automagic.crd.badChans)\n', ...
                                 'outlier', '\t* Removing a total of %d noisy or outlier channels.\n' ...
                        ),...
               'eog', struct('EOGreg_done', '* Removed the effect of EOG using linear analysis  (Parra, L. C., Spence, C. D., Gerson, A. D., & Sajda, P. (2005). Recipes for the linear analysis of EEG. Neuroimage, 28(2), 326-341.)\n', ...
                             'EOGreg_none', '* No EOG Regression performed.\n' ...
                        ),...
               'TrimData', struct('TrimData_done', '* Trim data performed: %s\n', ...
                         'TrimData_none', '* No TrimData performed.\n' ...
                    ),...
               'TrimOutlier', struct('TrimOutlier_done', '* Trim Outlier performed: %s\n', ...
                         'TrimOutlier_none', '* No TrimOutlier performed.\n' ...
                    ),...              
               'mara', struct('desc', '* Automatic classification and removal of artifactual source components using \n\t Multiple Artifact Rejection Algorithm (MARA) (Winkler, I., Haufe \n\t , S., & Tangermann, M. (2011). Automatic classification of artifactual \n\t ICA-components for artifact removal in EEG signals. Behavioral and \n\t Brain Functions, 7(1), 30.)\n', ...
                             'filtering', '\t* Performed a temporary (not affecting final data) high pass filter using \n\t  pop_eegfiltnew() FIR filter  with passband edge(s): %.2fHz, \n\t  filter order: %.2f, transition band width:  %.2fHz.\n', ...
                             'reject', '\t* Run an ICA decomposition of an EEG dataset using the EEGLAB function \n\t runica(), removing %d, while retaining %.2f %% Variance.\n', ...
                             'remove', '\t* Automatic classification of multiple artifact components based on \n\t 6 features from the time domain, the frequency domain, and the pattern\n\t* Remove classified components and subtract their activities from the \n\t (not temporarily filtered) data\n' ...
                        ),...
               'iclabel', struct('desc', '* Automatic classification and removal of artifactual source components using \n\t Independent Component Label (ICLabel). (Pion-Tonachini,L., Kreutz-Delgado, \n\t  K., Makeig, S. (2019). The ICLabel dataset of electroencephalographic (EEG) \n\t independent component (IC) features. Data in Brief, Volume 25, August 2019)\n', ...
                                 'filtering', '\t* Performed a temporary (not affecting final data) high pass filter using \n\t  pop_eegfiltnew() FIR filter  with passband edge(s): %.2fHz, \n\t filter order: %.2f, transition band width:  %.2fHz.\n', ...
                                 'include', '\t* Included Independent Components (greater than; smaller than): \n \t\t Brain Threshold: %s \n \t\t Muscle Threshold: %s \n \t\t Heart Threshold: %s \n \t\t Eye Threshold: %s \n \t\t Line Noise Threshold: %s \n \t\t Channel Noise Threshold: %s \n \t\t Other Threshold: %s \n', ...
                                 'exclude', '\t* Excluded Independent Components (greater than; smaller than): \n \t\t Brain Threshold: %s \n \t\t Muscle Threshold: %s \n \t\t Heart Threshold: %s \n \t\t Eye Threshold: %s \n \t\t Line Noise Threshold: %s \n \t\t Channel Noise Threshold: %s \n \t\t Other Threshold: %s \n' ...
                                 ),...
               'ETguidedICA', struct('ETguidedICA_done', '* Create optimized ICA training (OPTICAT) data for ocular correction. Dimigen, O. (2020)', ...
                                 'filtering', '\t* Performed a temporary (not affecting final data) high pass filter using \n\t  pop_eegfiltnew() FIR filter  with passband edge(s): %.2fHz, \n\t  filter order: %.2f, transition band width:  %.2fHz.\n' ...
                                 ),...                      
               'rpca', struct('desc', '* Remove DC offset by subtracting the channel mean\n',...
                             'params', '\t* The weight on sparse error term in the cost function is 1 / sqrt(numChans) or if not default  %.4f with a tolerance %.4f of for stopping criterion and a maximum number of %d iterations\n'...
                        ),...
               'dc', struct('desc', '* Remove DC offset by subtracting the channel mean\n' ...
                             ),...
               'highvar', struct('desc', '* Identify remaining noisy or outlier channels based on a higher variance than %.2f, cut-off greater than %.2f uV, rejection ratio greater than %.2f\n', ...
                             'badChans','\t* Number of channels removed due to High Variance Criterion(): %d (automagic.highVarianceRejection.badChans)\n' ...
                             ),...
               'minvar', struct('desc', '* Identify remaining noisy or outlier channels based on a minimum variance of %.2f\n', ...
                             'badChans','\t* Number of channels removed due to Minimum Variance Criterion(): %d (automagic.minVarianceRejection.badChans)\n' ...
                             ),...
               'interpolate', struct('desc', '* Interpolate noisy or outlier channels using eeg_interp() with %s method\n' ...
                             ),...
               'quality', struct('OHA', ['* Selected Overall Quality (OHV) Thresholds of [ %s] abs(ÔøΩV) \n',...
                                 '* Calculated Overall (OHV) quality Scores for selected thresholds of [ %s] \n',...
                                 '* Comitted (OVH) Quality Threshold [ %s] abs(ÔøΩV) \n',...
                                 '* Comitted OHV score [ %s] \n',...
                                 '* Comitted OHV Goodcutoff [ %s] \n',...
                                 '* Comitted OHV Badcutoff [ %s] \n'],...
                                 'THV',['* Selected Timepoints of High Variance (THV) Thresholds of [ %s] SD(ÔøΩV)\n',...
                                 '* Calculated Overall (THV) quality Scores for selected thresholds of [ %s] \n',...
                                 '* Comitted (THV) Quality Threshold [ %s] SD(ÔøΩV)\n',...
                                 '* Comitted THV score [ %s]\n',...
                                 '* Comitted THV Goodcutoff [ %s] \n',...
                                 '* Comitted THV Badcutoff [ %s] \n'],...
                                 'CHV',['* Selected  Channels of High Variance (CHV) Thresholds of [ %s] SD(ÔøΩV)\n',...
                                 '* Calculated Overall (CHV) quality Scores for selected thresholds of [ %s] \n',...
                                 '* Comitted (CHV) Quality Threshold [ %s] SD(ÔøΩV)\n',...
                                 '* Comitted CHV score [ %s]\n',...
                                 '* Comitted CHV Goodcutoff [ %s] \n',...
                                 '* Comitted CHV Badcutoff [ %s] \n',...
                                 '* Manual excluded channels for computing CHV [ %s] \n'],...
                                 'RBC', ['* RBC \n',...
                                 '* Calculated RBC quality measure [ %s]\n',...
                                 '* Comitted RBC Goodcutoff [ %s] \n',...
                                 '* Comitted RBC Badcutoff [ %s] \n',...
                                 '* Bad channels for RBC [ %s] \n',...
                                 '* Manual excluded channels for computing RBC [ %s] \n']...
                                 ));
end